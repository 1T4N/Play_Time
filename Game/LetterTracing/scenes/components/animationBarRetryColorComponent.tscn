[gd_scene load_steps=5 format=3 uid="uid://cgn033gu8f1wg"]

[sub_resource type="Animation" id="Animation_hbfpe"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_g60ef"]
resource_name = "retryColor"
length = 0.6
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(0.956863, 0.396078, 0.470588, 1), Color(0.956863, 0.396078, 0.470588, 1), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hsxg8"]
_data = {
&"RESET": SubResource("Animation_hbfpe"),
&"retryColor": SubResource("Animation_g60ef")
}

[sub_resource type="GDScript" id="GDScript_g60ef"]
script/source = "extends AnimationPlayer
func _process(_delta: float) -> void:
	if get_parent().retry:
		play(\"retryColor\")
"

[node name="animationBarRetryColorComponent" type="AnimationPlayer"]
libraries = {
&"": SubResource("AnimationLibrary_hsxg8")
}
script = SubResource("GDScript_g60ef")
